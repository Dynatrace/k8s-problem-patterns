apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ .Values.name | default .Release.Name }}-kaniko-big-image-push
  namespace: {{ .Values.faultInjection.namespace }}
spec:
  failedJobsHistoryLimit: 5
  successfulJobsHistoryLimit: 5
  schedule: {{ .Values.faultInjection.schedule.bigImagePush | quote }}
  jobTemplate:
    spec:
      backoffLimit: 1
      template:
        spec:
          restartPolicy: Never
          containers:
            - name: kaniko
              image: gcr.io/kaniko-project/executor:latest
              args:
                - "--verbosity=trace"
                - "--insecure"
                - "--skip-tls-verify"
                - "--build-arg=FILE_SIZE=$(FILE_SIZE)"
                - "--dockerfile=Containerfile"
                - "--destination={{ .Values.faultInjection.nameOverride }}.{{ .Values.namespace | default .Release.Namespace }}:5000/big-image:$(IMAGE_NAME)"
              env:
                - name: IMAGE_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: FILE_SIZE
                  value: 500M
              volumeMounts:
                - name: reg-creds
                  mountPath: /kaniko/.docker/
                - name: dockerfile
                  mountPath: /workspace/
          volumes:
            - name: reg-creds
              secret:
                secretName: zot-reg-creds
                items:
                  - key: config.json
                    path: config.json
            - name: dockerfile
              configMap:
                name: zot-containerfile
                items:
                  - key: Containerfile
                    path: Containerfile

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ .Values.name | default .Release.Name }}-delete-tags
  namespace: {{ .Values.faultInjection.namespace }}
spec:
  failedJobsHistoryLimit: 5
  successfulJobsHistoryLimit: 5
  schedule: {{ .Values.faultInjection.schedule.deleteTags | quote }}
  jobTemplate:
    spec:
      backoffLimit: 1
      template:
        spec:
          restartPolicy: Never
          containers:
            - name: delete-tags
              image: busybox
              env:
                - name: REG_PW
                  valueFrom:
                    secretKeyRef:
                      name: zot-admin
                      key: admin_password
                - name: NAMESPACE
                  value: {{ .Values.namespace | default .Release.Namespace }}
                - name: REGISTRY
                  value: {{ .Values.faultInjection.nameOverride }}
              args:
                - "sh"
                - "-c"
                - "/script/delete_images.sh"
              volumeMounts:
                - name: script
                  mountPath: /script
                  readOnly: true
          volumes:
            - name: script
              configMap:
                name: zot-delete-image-script
                items:
                  - key: delete_images.sh
                    path: delete_images.sh
                defaultMode: 0755
